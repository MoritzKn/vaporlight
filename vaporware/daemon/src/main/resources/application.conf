# Vaporlight daemon config
# Format: https://github.com/typesafehub/config#json-superset

mixer {

    # Tokens are used to control access to the mixer.
    #
    # Attributes:
    # - priority: tokens are blended together in this order (higher = later)
    # - persistent: keep layer state even when client connection is lost? (default: false)
    tokens {
        "high prio" {
            priority = 1024
            persistent = true
        }
        "sixteen letters." {
            priority = 512
        }
        "background" {
            priority = 0
            persistent = true
        }
    }

    # Maps logical RGB channels to three hardware channels,
    # each consisting of a hardware module number and the number
    # of the channel on the module.
    channels {
         0: [[0,  0], [0,  1], [0,  2]]
         1: [[0,  3], [0,  4], [0,  5]]
         2: [[0,  6], [0,  7], [0,  8]]
         3: [[0,  9], [0, 10], [0, 11]]
         4: [[0, 12], [0, 13], [0, 14]]
    }
}

hardware {

    # How to connect to the hardware.
    device = {

        # A normal usb to serial adapter:
        type = "serial"
        interface = "/dev/ttyUSB0"
        baudrate = 500000

        # Raspberry Pi GPIO pins (Pin 6: GND, Pin 8: TXD).
        # type = "serial"
        # baudrate = 115200 # you'll need a custom vaporlight firmware for this
        # interface = "/dev/ttyAMA0" # Raspberry Pi GPIO pins

        # TCP server. Usually the vaporlight emulator.
        # type = "network"
        # host = "127.0.0.1"
        # port = 23429

        # A file. Only useful for debugging.
        # type = "file"
        # path = "output.bin"
    }

    # How many channels each module has.
    # Necessary because of the current bus protocol.
    # Use "16" for the current vaporlight firmware.
    channels {
        0: 16
    }
}

# What interface / tcp port to listen on
server {
    interface = "0.0.0.0" # all interfaces
    port = 7534
}